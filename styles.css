/* Estilos personalizados adicionais */

/* Smooth scrolling */
html {
    scroll-behavior: smooth;
}

/* Custom scrollbar */
::-webkit-scrollbar {
    width: 8px;
}

::-webkit-scrollbar-track {
    background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
    background: #D4AF37;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #B8941F;
}

/* Parallax effect for hero */
.parallax {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

/* Glassmorphism effects */
.glass {
    background: rgba(255, 255, 255, 0.25);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.18);
}

/* Custom animations */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Animation classes */
.animate-fadeInUp {
    animation: fadeInUp 0.8s ease-out;
}

.animate-slideInLeft {
    animation: slideInLeft 0.8s ease-out;
}

.animate-slideInRight {
    animation: slideInRight 0.8s ease-out;
}

.animate-scaleIn {
    animation: scaleIn 0.6s ease-out;
}

/* Delay classes for staggered animations */
.animate-delay-200 {
    animation-delay: 0.2s;
}

.animate-delay-400 {
    animation-delay: 0.4s;
}

.animate-delay-600 {
    animation-delay: 0.6s;
}

/* Grid gallery auto-fit */
.gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
}

/* Hover effects */
.hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.hover-lift:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
}

/* Button ripple effect */
.btn-ripple {
    position: relative;
    overflow: hidden;
}

.btn-ripple::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
}

.btn-ripple:active::before {
    width: 300px;
    height: 300px;
}

/* Form focus effects */
/* Estilos para o novo formulário de contato com labels flutuantes */
.form-input {
    display: block;
    width: 100%;
    padding: 0.75rem 1rem;
    border-width: 2px;
    border-color: #d1d5db;
    border-radius: 0.5rem;
    background-color: #f9fafb;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
}
.form-input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
    border-color: #D4AF37;
}
.form-input.invalid {
    border-color: #ef4444; /* red-500 */
}
.form-input.invalid:focus {
    border-color: #dc2626; /* red-600 */
}
.form-label {
    position: absolute;
    top: 1rem;
    left: 1rem;
    z-index: 10;
    color: #6b7280;
    transform-origin: 0;
    transition: transform .3s, color .3s;
    transform: translateY(0) scale(1);
}
.peer:focus ~ .form-label, .peer:not(:placeholder-shown) ~ .form-label {
    transform: translateY(-1rem) scale(0.75);
}
/* Ajuste para o textarea */
textarea.form-input + .form-label {
    top: 1.25rem;
}
textarea.form-input:focus + .form-label,
textarea.form-input:not(:placeholder-shown) + .form-label {
    transform: translateY(-1.25rem) scale(0.75);
}

.spinner {
    border: 2px solid #f3f3f3;
    border-top: 2px solid #D4AF37;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Mobile-first responsive adjustments */
@media (max-width: 768px) {
    .hero-text {
        font-size: 2.5rem;
        line-height: 1.2;
    }
    
    .section-padding {
        padding: 3rem 0;
    }
    
    .container-mobile {
        padding-left: 1rem;
        padding-right: 1rem;
    }
}

/* Accessibility improvements */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* Estilo para o campo de upload de arquivo */
.file-input-label {
    display: flex;
    align-items: center;
    padding: 0.75rem 1rem;
    border: 2px dashed #d1d5db;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
}

/* Focus indicators */
button:focus,
input:focus,
select:focus,
textarea:focus,
a:focus {
    outline: 2px solid #D4AF37;
    outline-offset: 2px;
    position: relative; /* Garante que o outline não seja cortado */
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .text-gold {
        color: #B8941F;
    }
    
    .bg-gold {
        background-color: #B8941F;
    }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
    
    html {
        scroll-behavior: auto;
    }
}

/* Print styles */
@media print {
    .no-print {
        display: none !important;
    }
    
    body {
        font-size: 12pt;
        line-height: 1.4;
    }
    
    h1, h2, h3 {
        page-break-after: avoid;
    }
}

/* Custom selection color */
::selection {
    background-color: #D4AF37;
    color: white;
}

::-moz-selection {
    background-color: #D4AF37;
    color: white;
}

/* Gradient text effect */
.gradient-text {
    background: linear-gradient(45deg, #D4AF37, #F4D03F);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

/* Card hover effects */
.card-hover {
    transition: all 0.3s ease;
}

.card-hover:hover {
    transform: translateY(-10px);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
}

/* Image overlay effects */
.image-overlay {
    position: relative;
    overflow: hidden;
}

.image-overlay::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(45deg, rgba(212, 175, 55, 0.8), rgba(47, 47, 47, 0.8));
    opacity: 0;
    transition: opacity 0.3s ease;
}

.image-overlay:hover::after {
    opacity: 1;
}

/* Typography improvements */
.font-display {
    font-display: swap;
}

/* Loading states */
.loading {
    pointer-events: none;
    opacity: 0.6;
}

.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid #D4AF37;
    border-top-color: transparent;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

/* Smooth reveal animations */
/*
 * Animações de Entrada (Scroll Reveal)
 * A lógica JS em observeElements() adiciona a classe 'revealed'
 * quando o elemento entra na tela.
*/
.reveal {
  opacity: 0;
  transform: translateY(40px);
  transition: opacity 0.8s cubic-bezier(0.5, 0, 0, 1), transform 0.8s cubic-bezier(0.5, 0, 0, 1);
}

.reveal.revealed {
  opacity: 1;
  transform: translateY(0);
}

/* Adiciona um pequeno atraso para elementos filhos, criando um efeito cascata */
.reveal.revealed .reveal-child-1 { transition-delay: 0.1s; }
.reveal.revealed .reveal-child-2 { transition-delay: 0.2s; }
.reveal.revealed .reveal-child-3 { transition-delay: 0.3s; }
.reveal.revealed .reveal-child-4 { transition-delay: 0.4s; }
/* Custom checkbox and radio styles */
input[type="checkbox"]:not(.sr-only),
input[type="radio"]:not(.sr-only) {
    appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid #D4AF37;
    border-radius: 4px;
    position: relative;
    cursor: pointer;
}

input[type="radio"]:not(.sr-only) {
    border-radius: 50%;
}

input[type="checkbox"]:not(.sr-only):checked::after,
input[type="radio"]:not(.sr-only):checked::after {
    content: '';
    position: absolute;
    width: 12px;
    height: 12px;
    background: #D4AF37;
    border-radius: inherit;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Tooltip styles */
.tooltip {
    position: relative;
    cursor: help;
}

.tooltip::before {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 125%;
    left: 50%;
    transform: translateX(-50%);
    padding: 6px 12px;
    background: #2F2F2F;
    color: white;
    font-size: 12px;
    border-radius: 4px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 1000;
}

.tooltip::after {
    content: '';
    position: absolute;
    bottom: 115%;
    left: 50%;
    transform: translateX(-50%);
    border: 5px solid transparent;
    border-top-color: #2F2F2F;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.tooltip:hover::before,
.tooltip:hover::after {
    opacity: 1;
    visibility: visible;
}

/* === SIMULATOR STYLES === */

/* Animação suave para mostrar/esconder elementos */
.smooth-toggle {
    /* A transição de altura agora é controlada unicamente pelo container pai (#steps-container) para evitar conflitos. */
}

.smooth-toggle.hidden {
    display: none;
}

.step-title {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
    font-size: 1.5rem; /* text-2xl */
    text-align: center;
    margin-bottom: 2rem;
    color: #2F2F2F;
}

/* Container para transições de altura suaves */
#steps-container {
    position: relative;
    transition: height 0.4s ease-in-out;
}

.form-step {
    transition: opacity 0.4s ease-in-out, visibility 0.4s;
    position: absolute;
    width: 100%;
    opacity: 0;
    visibility: hidden;
}

/* Banner for "Best Value" card */
.best-value-banner {
    width: 100%;
    background: linear-gradient(to right, #F4D03F, #D4AF37);
    color: #2F2F2F;
    text-align: center;
    padding: 8px 0;
    font-size: 14px;
    font-weight: 700;
    font-family: 'Montserrat', sans-serif;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    border-bottom: 1px solid rgba(0,0,0,0.1);
}

.form-step.active {
    position: relative;
    opacity: 1;
    visibility: visible;
}
.step-card {
    position: relative; /* Necessário para posicionar o ícone de check */
    display: flex; /* Alterado para flex */
    align-items: center; /* Centraliza o conteúdo verticalmente */
    justify-content: center; /* Centraliza o conteúdo horizontalmente */
    height: 100%; /* Garante que todos os cards na mesma linha tenham a mesma altura */
    cursor: pointer;
    background-color: white;
    padding: 1.25rem;
    border-radius: 1rem;
    border-width: 2px;
    border-color: #e5e7eb;
    transition: all 0.3s;
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
}
.step-card:hover {
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    transform: translateY(-0.25rem);
}
.step-card .card-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: #2F2F2F;
}
.peer:checked ~ .card-content {
    color: #D4AF37;
}
.peer:checked ~ .card-content h4 {
    font-weight: 700;
}
.step-card:has(.peer:checked) {
    border-color: #D4AF37;
    background-color: rgba(212, 175, 55, 0.05);
}

.slider-group {
    background-color: white;
    padding: 1.5rem;
    border-radius: 1rem;
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
}
.slider-group input[type="range"] {
    width: 100%;
    height: 0.5rem;
    background-color: #e5e7eb;
    border-radius: 9999px;
    -webkit-appearance: none;
    appearance: none;
    cursor: pointer;
}
.slider-group input[type="range"]::-webkit-slider-thumb {
    width: 1.25rem;
    height: 1.25rem;
    background-color: #D4AF37;
    border-radius: 9999px;
    -webkit-appearance: none;
    appearance: none;
}
.extra-option-card {
    display: flex;
    align-items: center;
    gap: 1rem;
    background-color: white;
    padding: 1rem;
    border-radius: 1rem;
    border-width: 2px;
    border-color: #e5e7eb;
    cursor: pointer;
    transition: all 0.3s;
}
.extra-option-card:has(input:checked) {
    border-color: #D4AF37;
    background-color: rgba(212, 175, 55, 0.05);
}
.action-btn {
    width: 100%;
    color: white;
    font-weight: 600;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    transition: all 0.3s;
}
.action-btn:hover {
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
}
.progress-step {
    width: 3rem;
    height: 3rem;
    border-radius: 9999px;
    border-width: 2px;
    border-color: #d1d5db;
    background-color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #9ca3af;
    font-size: 1.25rem;
    transition: all 0.3s;
}
.progress-step.active {
    border-color: #D4AF37;
    background-color: #D4AF37;
    color: white;
}
.progress-line {
    flex: 1 1 0%;
    height: 0.25rem;
    background-color: #d1d5db;
    transition: all 0.3s;
}
.progress-line.active {
    background-color: #D4AF37;
}

#simulator-overlay {
    transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
}
#simulator-overlay.is-hidden {
    opacity: 0;
    visibility: hidden;
}